{
	"info": {
		"_postman_id": "554133eb-751a-4efb-8fd1-0c6d7d7016b8",
		"name": "GitHubDemo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15914256"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "GetAllIssues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = pm.response.json();\r",
									"console.log(body[1])\r",
									"\r",
									"pm.test(\"Check body length\", function(){\r",
									"    pm.expect(body[0].title).to.not.include(\"Postmana\")\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BogdanGrozdanov",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSingleUssue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = pm.response.json();\r",
									"\r",
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})\r",
									"\r",
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.status).to.equal(\"OK\")\r",
									"})\r",
									"\r",
									"pm.test(\"Check status code ES6\", () => {\r",
									"    pm.expect(pm.response.code, \"status code\").to.equal(200)\r",
									"})\r",
									"\r",
									"pm.test(\"Check status code other way\", function() {\r",
									"    pm.response.to.status(200);\r",
									"} )\r",
									"\r",
									"pm.test(\"Check issue URL\", () => {\r",
									"  pm.expect(body.url,\"Property URL\").to.equal(\"https://api.github.com/repos/BogdanGrozdanov/DemoPostman/issues/1\")\r",
									"})\r",
									"\r",
									"pm.test(\"Check issue number\", () => {\r",
									"  pm.expect(body.number,\"Number Property\").to.equal(1)\r",
									"})\r",
									"\r",
									"pm.test(\"Check issue ID\", () => {\r",
									"  pm.expect(body.id,\"Property ID\").to.equal(1260790224 )\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BogdanGrozdanov",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/1",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comment from issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BogdanGrozdanov",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/4/comments",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"4",
								"comments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create_Issue_with_labels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\",function(){\r",
									" pm.expect(pm.response.code).to.equal(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BogdanGrozdanov",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Second issue from Postman with labels\",\r\n    \"labels\": [\r\n        \"bug\",\r\n        \"UI\",\r\n        \"user\",\r\n        \"Bogdan\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create_issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = pm.response.json();\r",
									"let number = body.number;\r",
									"\r",
									"\r",
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"})\r",
									"\r",
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.status).to.equal(\"Created\")\r",
									"})\r",
									"\r",
									"pm.test(\"Check status code ES6\", () => {\r",
									"    pm.expect(pm.response.code, \"status code\").to.equal(201)\r",
									"})\r",
									"\r",
									"pm.test(\"Check status code other way\", function() {\r",
									"    pm.response.to.status(201);\r",
									"} )\r",
									"\r",
									"pm.test(\"Check issue URL\", () => {\r",
									"    let url =\"https://api.github.com/repos/BogdanGrozdanov/DemoPostman/issues/\" + number;\r",
									"\r",
									"  pm.expect(body.url,\"Property URL\").to.equal(url);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue number\", () => {\r",
									"  pm.expect(body.number,\"Number Property\").to.be.greaterThan(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue ID\", () => {\r",
									"  pm.expect(body.id,\"Property ID\").to.be.greaterThan(1)\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BogdanGrozdanov",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\" : \"First issue from Postman\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.code).to.equal(201)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BogdanGrozdanov",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"body\": \"This is a comment (add comment)\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/4/comments",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"4",
								"comments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UPDATE",
			"item": [
				{
					"name": "Update_Issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let title = pm.response.json()\r",
									"\r",
									"pm.test(\"Check update\" , function(){\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BogdanGrozdanov",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"title\": \"Edited bug (new title)\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/22",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Close issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BogdanGrozdanov",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"state\": \"closed\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/6",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function() {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BogdanGrozdanov",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"body\": \"edit/Add comment\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/4#comments-1152975878",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"4"
							],
							"hash": "comments-1152975878"
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete_issue",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "BogdanGrozdanov",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"closed_at\": \"Bogdan Grozdanov\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues/comments/1268352529",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues",
								"comments",
								"1268352529"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}